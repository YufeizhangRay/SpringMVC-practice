<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns="http://xmlns.jcp.org/xml/ns/javaee" 
    xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee 
    http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" version="3.1">
  
  <!-- 配置 org.springframework.web.filter.HiddenHttpMethodFilter:可以把POST请求转为DELETE或者PUT请求 -->
  	<filter>
  		<filter-name>HiddenHttpMethodFilter</filter-name>
  		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
  	</filter>
  	
  	<filter-mapping>
  		<filter-name>HiddenHttpMethodFilter</filter-name>
  		<url-pattern>/*</url-pattern>
  		<servlet-name>mcpMvc</servlet-name>
  	</filter-mapping>
  
  <!-- 配置 SpringMVC 前端控制器 DispatcherServlet(核心调度器) -->
  <servlet>
      <servlet-name>springDispatcherServlet</servlet-name>
      <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
      <!-- 指定SpringMVC配置文件spring-config.xml，用来将拦截的对应请求分发给对应的Controller-->
      <!-- 实际上也可以不通过contextConfigLocation来配置SpringMVC的配置文件，而使用默认的
           默认的配置文件为：/WEB-INF/ <servlet-name>-servlet.xml
           <init-param>
          <param-name>contextConfigLocation</param-name>
          <param-value>classpath:springmvc.xml</param-value>
      </init-param>
       -->
      <load-on-startup>1</load-on-startup>
  </servlet>
  
  <!-- 指定该springmvc的Servlet可以拦截的请求为所有请求（"/"）,
       之后可以分发给对应的Controller-->
  <servlet-mapping>
      <servlet-name>springDispatcherServlet</servlet-name>
      <!-- ‘/’: 根目录下的所有地址，包括:静态，所有 url 地址，但是不包括其他 Servlet 
      		不要用 ‘/*’， 一般用在拦截器上
      -->
      <url-pattern>/</url-pattern>
  </servlet-mapping>
</web-app>
